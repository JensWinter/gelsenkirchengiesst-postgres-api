# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
env:
  CONTAINERNAME: "postgresdb-integration"
  CI: "true"
  NODE_ENV: "test"
on:
  push:
    branches: [master, dev, staging]
  pull_request:
    branches: [master, dev, staging]

jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    services:
      postgres:
        image: postgis/postgis:11-3.0
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: ent
          POSTGRES_USER: fangorn
          POSTGRES_DB: trees
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      # - run: PGPASSWORD=ent psql -h localhost -d trees -U fangorn -q -f test/sql/build-schema.sql
      - run: npm test
  release:
    name: semantic-release
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 18
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
