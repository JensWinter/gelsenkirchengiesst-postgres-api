# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# TODO: adjust ci workflow to use new testing setup (vercel and supabase)
name: Node.js CI
env:
  CI: "true"
  NODE_ENV: "test"
on:
  push:
    branches: [master, dev, staging]
  pull_request:
    branches: [master, dev, staging]

jobs:
  test:
    env:
      SUPABASE_INTERNAL_IMAGE_REGISTRY: docker.io
      SUPABASE_URL: http://localhost:54321
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU

      issuer: ${{ secrets.issuer }}
      audience: ${{ secrets.audience }}
      jwksuri: ${{ secrets.jwksuri }}
      jwt_secret: ${{ secrets.jwt_secret }}
      client_secret: ${{ secrets.client_secret }}
      client_id: ${{ secrets.client_id }}

    runs-on: ubuntu-latest
    environment: ci_test
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME  }}
          password: ${{ secrets.DOCKER_PASSWORD  }}
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: supabase/setup-cli@v1
        with:
          version: 1.33.0
      - run: supabase start
      - run: npm ci
      - run: npm run build --if-present
      #  Make sure to run tests in band and force exit to avoid hanging tests
      # until we know where the open handles are
      - run: npm test -- --runInBand --forceExit
      - run: supabase stop
  release:
    name: semantic-release
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 18
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
